:toc:

== How to...

==== Collapse to single cursor after using multiple cursors / Keep only primary cursor
- Use the default keybind `,` bound to the `keep_primary_selection` command.

==== Change cursor shape on mode change (bar cursor on insert mode, block on normal mode, etc)

- Add this to your https://docs.helix-editor.com/configuration.html#configuration[`config.toml`]:
+
[source,toml]
----
[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"
----

==== Map `jk` or `jj` to exit insert mode

- Add this to your https://docs.helix-editor.com/configuration.html#configuration[`config.toml`]:
+
[source,toml]
----
[keys.insert]
j = { k = "normal_mode" }
----

==== Use my terminal's 16 color palette as a theme

- You can use color names like `red`, `light-blue`, etc to refer to
the terminal's colors in a theme file; refer the
https://docs.helix-editor.com/themes.html#color-palettes[theme color palette]
documentation.

==== Perform find-and-replace

- Type `%` to select the entire file, then `s` to bring up a `select:` prompt. Enter your search, and press enter. All matches in the file will be selected; you can now use `c` to change them all simultaneously.

To make search fully case sensitive add the following to `config.toml`:
```
[editor.search]
smart-case = false
```

_Note:_ If you use LSP autocomplete, only the first match will be auto-completed. If you want to auto-complete all matches, you currently have to https://github.com/helix-editor/helix/wiki/FAQ#use-lsp-autocomplete-with-multiple-selections-temporary-workaround[*use this workaround*].

==== Strip whitespace or format the buffer

If the LSP for the language is active and supports autoformat, and the auto-format option is on (check your and the repo's `languages.toml`), then this will happen on save. If there is an alternative command you can run in the terminal to format, you can pipe the whole buffer to it manually with `%|<formatter><enter>`.

==== Use LSP autocomplete with multiple selections (temporary workaround)

Until the https://github.com/helix-editor/helix/issues/2016[*bug with LSP autocomplete with multiple selections*] is fixed, you can use this workaround:

```js
import assert from 'assert'
import test from 'tape'

test ('stuff', t => {
  assert(x)
  assert(y)
  assert(z)
})
```

To move from basic asserts to tape’s asserts:

1. Select and start changing the first assert pass:[<kbd>w</kbd><kbd>c</kbd>] and start typing `t.tr` pass:[<kbd>tab</kbd>] and select `true` from the list to auto-complete.

2. Select the completed text (`t.true`) (pass:[<kbd>alt</kbd><kbd>←</kbd>] to select previous adjacent sibling) and yank it (pass:[<kbd>y</kbd>])

3. Select the lines with the two remaining `assert` statements using pass:[<kbd>x</kbd>] and select the asserts using pass:[<kbd>s</kbd>] `assert`

4. Replace the selected text with the yanked text (pass:[<kbd>R</kbd>]) to get:

```js
import assert from 'assert'
import test from 'tape'

test ('stuff', t => {
  t.true(x)
  t.true(y)
  t.true(z)
})
```

Once the https://github.com/helix-editor/helix/issues/2016[*bug with LSP autocomplete with multiple selections*] is fixed you will simply be able to select all three asserts and replace them all using auto-complete.

==== Access the Helix config directory

[cols="1,1"]
|===
| Platform | Location
| Mac OS/Linux
| `~/.config/helix`
| Windows
| `C:\Users\\____\AppData\Roaming\helix`
|===

==== Access the log file

Enable logging via the `-v` flag, with each use (up to `-vvv`) increasing the verbosity.

[cols="1,1"]
|===
| Platform | Location
| Mac OS/Linux
| `~/.cache/helix/helix.log` 
| Windows
| `C:\Users\\____\AppData\Local\helix\helix.log`
|===

==== Adding a language

Check https://docs.helix-editor.com/guides/adding_languages.html

== General Questions

==== How to write plugins / Is there a plugin system in place yet ?

* It's currently under discussion, with the general plan of using WebAssembly to
provide plugin support. Some links regarding ongoing discussions:
 ** https://github.com/helix-editor/helix/issues/122[Initial discussion]
 ** https://github.com/helix-editor/helix/discussions/580[Pre-RFC discussion]
 ** https://github.com/helix-editor/helix/pull/455[Plugin system MVP]

==== When will the next release be?

We shoot to cut a release every two months. The version is in CalVer format, so if the current latest release is `22.03`, the next will be `22.05` (May, 2022).

== Installation

=== Error when building tree-sitter language grammars in Fedora

Ensure that you have a C compiler installed:

```shell
sudo dnf group install "C Development Tools and Libraries"
```

Previous issues: https://github.com/helix-editor/helix/issues/773, https://github.com/helix-editor/helix/issues/1223, https://github.com/helix-editor/helix/issues/1915.